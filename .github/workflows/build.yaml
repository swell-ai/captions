name: Build, Run and Publish binary

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        platform: ["linux/amd64", "linux/arm64"]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Create and use builder
        run: |
          docker buildx create --name captions-builder --use
          docker buildx inspect --bootstrap

      - name: Build the Docker image
        run: docker buildx build --platform=${{ matrix.platform }} -t captions-${{ matrix.platform }} .

      - name: Run the Docker image
        run: mkdir -p ./${{ matrix.platform }} && docker run --platform=${{ matrix.platform }} -v ./${{ matrix.platform }}:/app/out captions-${{ matrix.platform }}

      - name: Get commit SHA
        id: get_sha
        run: echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: Calculate binary checksum
        id: checksum
        run: echo "::set-output name=sha256::$(sha256sum ./${{ matrix.platform }}/captions | awk '{print $1}')"
      - name: Create Release
        if: matrix.platform == 'linux/amd64'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_sha.outputs.sha }}
          release_name: ${{ steps.get_sha.outputs.sha }}
          body: |
            Commit SHA: ${{ steps.get_sha.outputs.sha }}
            Binary SHA256 checksum: ${{ steps.checksum.outputs.sha256 }}
          draft: true
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ matrix.platform }}/captions
          asset_name: captions-${{ matrix.platform }}
          asset_content_type: application/octet-stream
